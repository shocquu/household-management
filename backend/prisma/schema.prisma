// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  password    String
  email       String    @unique
  avatar_url  String    @default("/assets/iamges/avatars/avatar_default.jpg")
  role        Role      @default(USER)

  tasks       Task[]
  comments    Comment[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt

  @@map("user")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?

  tags        Tag[]
  comments    Comment[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt

  userId      Int
  user        User?      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  
  @@map("task")
}

model Comment {
  id          Int       @id @default(autoincrement())
  message     String

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt

  authorId    Int
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  taskId      Int
  task        Task      @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("comment")
}

model Tag {
  id          Int       @id @default(autoincrement())
  label       String
  color       String

  tasks       Task[]    @relation

  @@map("tag")
}

enum Role {
  USER
  ADMIN
}


